apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-app
  namespace: orchestrator
  labels:
    app: monitoring-app
    component: monitoring
spec:
  replicas: 3
  selector:
    matchLabels:
      app: monitoring-app
  template:
    metadata:
      labels:
        app: monitoring-app
        component: monitoring
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: monitoring-app
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - monitoring-app
              topologyKey: kubernetes.io/hostname
      containers:
      - name: app
        image: orchestrator-app:latest
        imagePullPolicy: IfNotPresent
        command:
        - /app
        args:
        - --app-id=$(POD_NAME)
        - --port=8080
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: monitoring-app
  namespace: orchestrator
  labels:
    app: monitoring-app
    component: monitoring
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: monitoring-app
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: monitoring-app
  namespace: orchestrator
  labels:
    app: monitoring-app
    component: monitoring
