---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: success-rate
  namespace: orchestrator
  labels:
    app.kubernetes.io/name: orchestrator
    app.kubernetes.io/component: analysis
spec:
  args:
  - name: service-name
  - name: prometheus-address
    value: http://prometheus:9090
  metrics:
  - name: success-rate
    interval: 1m
    successCondition: result[0] >= 0.95
    failureLimit: 3
    provider:
      prometheus:
        address: "{{args.prometheus-address}}"
        query: |
          sum(rate(
            http_requests_total{
              service="{{args.service-name}}",
              status=~"2.."
            }[5m]
          )) / sum(rate(
            http_requests_total{
              service="{{args.service-name}}"
            }[5m]
          ))
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: latency
  namespace: orchestrator
  labels:
    app.kubernetes.io/name: orchestrator
    app.kubernetes.io/component: analysis
spec:
  args:
  - name: service-name
  - name: prometheus-address
    value: http://prometheus:9090
  metrics:
  - name: p95-latency
    interval: 1m
    successCondition: result[0] <= 1000
    failureLimit: 3
    provider:
      prometheus:
        address: "{{args.prometheus-address}}"
        query: |
          histogram_quantile(0.95,
            sum(rate(
              http_request_duration_milliseconds_bucket{
                service="{{args.service-name}}"
              }[5m]
            )) by (le)
          )
  - name: p99-latency
    interval: 1m
    successCondition: result[0] <= 2000
    failureLimit: 3
    provider:
      prometheus:
        address: "{{args.prometheus-address}}"
        query: |
          histogram_quantile(0.99,
            sum(rate(
              http_request_duration_milliseconds_bucket{
                service="{{args.service-name}}"
              }[5m]
            )) by (le)
          )
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: error-rate
  namespace: orchestrator
  labels:
    app.kubernetes.io/name: orchestrator
    app.kubernetes.io/component: analysis
spec:
  args:
  - name: service-name
  - name: prometheus-address
    value: http://prometheus:9090
  metrics:
  - name: error-rate
    interval: 1m
    successCondition: result[0] <= 0.05
    failureLimit: 3
    provider:
      prometheus:
        address: "{{args.prometheus-address}}"
        query: |
          sum(rate(
            http_requests_total{
              service="{{args.service-name}}",
              status=~"5.."
            }[5m]
          )) / sum(rate(
            http_requests_total{
              service="{{args.service-name}}"
            }[5m]
          ))
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: cpu-usage
  namespace: orchestrator
  labels:
    app.kubernetes.io/name: orchestrator
    app.kubernetes.io/component: analysis
spec:
  args:
  - name: service-name
  - name: prometheus-address
    value: http://prometheus:9090
  metrics:
  - name: cpu-usage
    interval: 1m
    successCondition: result[0] <= 0.80
    failureLimit: 3
    provider:
      prometheus:
        address: "{{args.prometheus-address}}"
        query: |
          sum(rate(
            container_cpu_usage_seconds_total{
              pod=~"{{args.service-name}}.*"
            }[5m]
          )) by (pod)
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: memory-usage
  namespace: orchestrator
  labels:
    app.kubernetes.io/name: orchestrator
    app.kubernetes.io/component: analysis
spec:
  args:
  - name: service-name
  - name: prometheus-address
    value: http://prometheus:9090
  metrics:
  - name: memory-usage
    interval: 1m
    successCondition: result[0] <= 1610612736
    failureLimit: 3
    provider:
      prometheus:
        address: "{{args.prometheus-address}}"
        query: |
          sum(
            container_memory_usage_bytes{
              pod=~"{{args.service-name}}.*"
            }
          ) by (pod)
