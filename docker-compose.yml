# Docker Compose for Local Development (Task 55)
version: '3.8'

services:
  # Zookeeper cluster
  zookeeper:
    image: zookeeper:3.8.4
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181
    volumes:
      - zk-data:/data
      - zk-datalog:/datalog

  # Mesos Master
  mesos-master:
    image: mesosphere/mesos-master:1.11.0
    container_name: mesos-master
    ports:
      - "5050:5050"
    environment:
      MESOS_ZK: zk://zookeeper:2181/mesos
      MESOS_QUORUM: 1
      MESOS_CLUSTER: local-cluster
      MESOS_HOSTNAME: localhost
      MESOS_WORK_DIR: /var/lib/mesos
      MESOS_LOG_DIR: /var/log/mesos
    depends_on:
      - zookeeper
    volumes:
      - mesos-master-work:/var/lib/mesos
      - mesos-master-log:/var/log/mesos

  # Mesos Agent
  mesos-agent:
    image: mesosphere/mesos-agent:1.11.0
    container_name: mesos-agent
    privileged: true
    ports:
      - "5051:5051"
    environment:
      MESOS_MASTER: zk://zookeeper:2181/mesos
      MESOS_CONTAINERIZERS: docker,mesos
      MESOS_PORT: 5051
      MESOS_RESOURCES: "cpus:4;mem:8192;disk:20000;ports:[31000-32000]"
      MESOS_HOSTNAME: localhost
      MESOS_WORK_DIR: /var/lib/mesos
      MESOS_LOG_DIR: /var/log/mesos
      MESOS_SYSTEMD_ENABLE_SUPPORT: false
    depends_on:
      - mesos-master
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/sys
      - mesos-agent-work:/var/lib/mesos
      - mesos-agent-log:/var/log/mesos

  # Marathon
  marathon:
    image: mesosphere/marathon:v1.11.27
    container_name: marathon
    ports:
      - "8080:8080"
    environment:
      MARATHON_MASTER: zk://zookeeper:2181/mesos
      MARATHON_ZK: zk://zookeeper:2181/marathon
      MARATHON_HOSTNAME: localhost
      MARATHON_HTTP_PORT: 8080
    depends_on:
      - mesos-master
      - zookeeper

  # Orchestrator App
  orchestrator:
    build: .
    container_name: orchestrator
    ports:
      - "8082:8080"
      - "9090:9090"
    environment:
      ORCHESTRATOR_PORT: 8080
      METRICS_PORT: 9090
      MESOS_MASTER_URL: http://mesos-master:5050
      ZOOKEEPER_SERVERS: zookeeper:2181
    depends_on:
      - zookeeper
      - mesos-master
      - marathon
    volumes:
      - orchestrator-data:/data

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9091:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    depends_on:
      - orchestrator

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  zk-data:
  zk-datalog:
  mesos-master-work:
  mesos-master-log:
  mesos-agent-work:
  mesos-agent-log:
  orchestrator-data:
  prometheus-data:
  grafana-data:

networks:
  default:
    name: orchestrator-network
